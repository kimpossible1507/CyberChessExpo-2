name: Android CI (Expo Local Gradle)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    env:
      ZIP_NAME: CyberChessExpo.zip   # <-- nome do ZIP que você subiu
      APP_DIR: app
      NODE_VERSION: 18
      ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
      ANDROID_HOME: ${{ runner.temp }}/android-sdk

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure unzip & curl
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip curl

      - name: Unzip project
        run: |
          rm -rf "$APP_DIR"
          mkdir -p "$APP_DIR"
          if [ ! -f "$ZIP_NAME" ]; then
            echo "ERRO: $ZIP_NAME não encontrado na raiz do repo."
            exit 1
          fi
          unzip -q "$ZIP_NAME" -d "$APP_DIR"
          # Se o ZIP vier com uma pasta única interna (ex.: CyberChessExpo/...), achata para $APP_DIR/
          INNER=$(ls -1 "$APP_DIR" | head -n 1)
          if [ -d "$APP_DIR/$INNER" ] && [ -f "$APP_DIR/$INNER/package.json" ]; then
            shopt -s dotglob
            mv "$APP_DIR/$INNER"/* "$APP_DIR"/
            rmdir "$APP_DIR/$INNER"
            shopt -u dotglob
          fi

      - name: Sanity check (package.json + app.json)
        working-directory: ${{ env.APP_DIR }}
        run: |
          test -f package.json || (echo "ERRO: package.json não encontrado." && exit 1)
          test -f app.json || (echo "ERRO: app.json não encontrado." && exit 1)
          echo "OK: Estrutura mínima encontrada."

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.APP_DIR }}/package.json

      - name: Install JS deps
        working-directory: ${{ env.APP_DIR }}
        run: |
          npm ci || npm i
          # Alinha dependências Expo se possível (não falha o job se algo travar)
          npx expo install --non-interactive || true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Install Android SDK (cmdline-tools + platforms + build-tools)
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -sLo cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdline-tools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          SDKMAN="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"

          yes | "$SDKMAN" --sdk_root="$ANDROID_SDK_ROOT" --licenses

          # Plataforma 34; se falhar, instala 33
          if ! yes | "$SDKMAN" --sdk_root="$ANDROID_SDK_ROOT" "platforms;android-34" ; then
            yes | "$SDKMAN" --sdk_root="$ANDROID_SDK_ROOT" "platforms;android-33"
          fi

          yes | "$SDKMAN" --sdk_root="$ANDROID_SDK_ROOT" "platform-tools"
          yes | "$SDKMAN" --sdk_root="$ANDROID_SDK_ROOT" "build-tools;34.0.2" || \
          yes | "$SDKMAN" --sdk_root="$ANDROID_SDK_ROOT" "build-tools;34.0.0" || \
          yes | "$SDKMAN" --sdk_root="$ANDROID_SDK_ROOT" "build-tools;33.0.2"

      - name: Expo prebuild (gera android/)
        working-directory: ${{ env.APP_DIR }}
        run: |
          npx expo prebuild -p android --non-interactive --no-install

      - name: Build Debug APK (Gradle)
        working-directory: ${{ env.APP_DIR }}/android
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          # Ajusta RAM do Gradle para builds mais pesados
          ORG_GRADLE_PROJECT_orgGradleJvmargs: "-Xmx3g -Dfile.encoding=UTF-8"
        run: |
          ./gradlew :app:assembleDebug --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: ${{ env.APP_DIR }}/android/app/build/outputs/apk/debug/app-debug.apk
